/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1912                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   0.001;

vertices
(
    (-10 1 0)
    (0 1 -10)
    (0 1 -8.5)
    (-7 1 0)
    (-10 0 0)
    (0 0 -10)
    (0 0 -8.5)
    (-7 0 0)

    // (-10 0.4361938737 0)
    // (0 0.4361938737 -10)
    // (0 0.3053357116 -7)
    // (-7 0.3053357116 0)
    // (-10 -0.4361938737 0)
    // (0 -0.4361938737 -10)
    // (0 -0.3053357116 -7)
    // (-7 -0.3053357116 0)
);

blocks
(
    hex (0 1 2 3 4 5 6 7) (30 6 1) simpleGrading (1 1 1)
);

edges
(
    arc 0 1 (-7.07106781187 1 -7.07106781187)
    arc 4 5 (-7.07106781187 0 -7.07106781187)

    // arc 3 2 (-4.9497474683 1 -4.9497474683)
    // arc 7 6 (-4.9497474683 0 -4.9497474683)

    arc 3 2 (-4.9497474683 1 -6.01040764009)
    arc 7 6 (-4.9497474683 0 -6.01040764009)

    // arc 0 1 (-7.07106781187 0.4361938737 -7.07106781187)
    // arc 4 5 (-7.07106781187 -0.4361938737 -7.07106781187)

    // arc 3 2 (-4.9497474683 0.3053357116 -4.9497474683)
    // arc 7 6 (-4.9497474683 -0.3053357116 -4.9497474683)
);

boundary
(
    fixed
    {
        type patch;
        faces
        (
            (0 4 7 3)
        );
    }
    right
    {
        type patch;
        faces
        (
            (2 6 5 1)
        );
    }
    inside
    {
        type patch;
        faces
        (
            (3 7 6 2)
        );
    }
    outside
    {
        type patch;
        faces
        (
            (1 5 4 0)
        );
    }
    top
    {
        type patch;
        faces
        (
            (4 5 6 7)
        );
    }
    bottom
    {
        type patch;
        faces
        (
            (0 3 2 1)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
