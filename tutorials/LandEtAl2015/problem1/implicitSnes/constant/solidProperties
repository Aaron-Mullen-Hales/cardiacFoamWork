/*--------------------------------*- C++ -*----------------------------------*\
| solids4foam: solid mechanics and fluid-solid interaction simulations        |
| Version:     v2.0                                                           |
| Web:         https://solids4foam.github.io                                  |
| Disclaimer:  This offering is not approved or endorsed by OpenCFD Limited,  |
|              producer and distributor of the OpenFOAM software via          |
|              www.openfoam.com, and owner of the OPENFOAM® and OpenCFD®      |
|              trade marks.                                                   |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant";
    object      solidProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

//solidModel     linearGeometryTotalDisplacement;
solidModel     nonLinearGeometryTotalLagrangianTotalDisplacement;

"linearGeometryTotalDisplacementCoeffs|nonLinearGeometryTotalLagrangianTotalDisplacementCoeffs"
{
    // Solution algorithm
    //solutionAlgorithm implicitSegregated;
    solutionAlgorithm PETScSNES;
    //solutionAlgorithm explicit;

    // PETSc options file used by PETScSNES
    // optionsFile petscOptions.hypre;
    optionsFile petscOptions.lu;

    // Solve for pressure and displacement
    solvePressure yes;

    // Pressure smoothing coefficient when solving for pressure
    // Trottenberg recommends 1/16 for Stokes flow
    // But what is a good value for a solid's pressure equation
    // Convergence seems to be more difficult as omega is increased, maybe
    // because pressure becomes only defined to a constant
    //omega [-1 1 2 0 0 0 0] 0.0625;
    omega [-1 1 2 0 0 0 0] 1e-4;

    // Time derivative coefficient
    omegaTau [-1 1 3 0 0 0 0] 1e-4;

    // Predictor D at the start of a new time step using U and A
    predictor no;

    stabilisation
    {
        type        RhieChow;
        //type        alpha;
        scaleFactor 0.5;
    }
}

// ************************************************************************* //
