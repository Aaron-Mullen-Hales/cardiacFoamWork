/*--------------------------------*- C++ -*----------------------------------*\
| solids4foam: solid mechanics and fluid-solid interaction simulations        |
| Version:     v2.0                                                           |
| Web:         https://solids4foam.github.io                                  |
| Disclaimer:  This offering is not approved or endorsed by OpenCFD Limited,  |
|              producer and distributor of the OpenFOAM software via          |
|              www.openfoam.com, and owner of the OPENFOAM® and OpenCFD®      |
|              trade marks.                                                   |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      mechanicalProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

planeStress     no;

mechanical
(
    heartTissue
    {
        type            electroMechanicalLaw;
        rho             rho [1 -3 0 0 0 0 0] 3000;
        activeTension   activeTension [1 -1 -2 0 0 0 0] 0.0;
        rampTime        0.0;
        passiveMechanicalLaw
        {
            type            GuccioneElastic;
            calculateStressInLocalCoordinateSystem yes;
            k               k [1 -1 -2 0 0 0 0] 2e3;
            cf              8.0;
            ct              2.0;
            cfs             4.0;

            uniformFibreField yes;
            f0              (1 0 0);

            // The bulk modulus acts as a penalty factor to enforce
            // incompressiblity
            // Using approximately 100 x shear modulus should be enough
            // Max shear parameter = 8*2e3 = 16e3
            // kappa = 16e5 is 100 times
            // kappa = 16e6 is 1000 times
            bulkModulus     bulkModulus [1 -1 -2 0 0 0 0] 16e6;
        }
    }
);

// ************************************************************************* //
